@using userprofile.Models;
@model Tuple<QUALIFICATION, List<USERQUAL>>
@{

}

<div class="row">
    <div class="col-sm-12">
        <div class="box">
            <div class="box-body">



                @Html.ActionLink("Edit", "Edit", new { id = Model.Item1.qualificationId }, new {@class="btn btn-warning pull-right" })
                <h4>QUALIFICATION</h4>
                <hr />

                <dl class="dl-horizontal">
                    <dt>
                        Name
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.description)
                    </dd>
					<dt>
						Levels
					</dt>
					<dd>
						@Html.DisplayFor(mode => Model.Item1.qualificationLevel)
					</dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.SPORT1.name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.SPORT1.name)
                    </dd>
					<dt>
						# Referees
					</dt>
					<dd>
						@Model.Item2.Count()
					</dd>
                </dl>




            </div>

        </div>
    </div>
</div>


<div class="row">
    <div class="col-sm-12">
        <div class="box">
            <div class="box-body">
                <div class="table-responsive">
                    <table id="example2" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>User name</th>


                                <th>

                                    Qualification Level

                                </th>

                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ var counter = 0;}
                            @foreach (var item in Model.Item2)
                            {
                                <tr id="row@(item.refId)">
                                    <td>
                                        <a href="@Url.Action( "Details","REFEREE", new { id = item.REFEREE.refId })">
                                            @item.REFEREE.AspNetUser.UserName
                                        </a>
                                    </td>


                                    <td>
                                        @item.qualLevel
                                    </td>
                                    <td>
                                        <button type="button" id="@item.refId" class="btn btn-google-plus delete" >&nbsp;&nbsp;&nbsp;delete referee&nbsp;&nbsp;&nbsp;</button>
                                    </td>
                                </tr>
                                counter++;
                            }
                            <tr>
                                <td>
                                    @Html.DropDownList("referees", (List<SelectListItem>)ViewBag.refeList, "Select a new referee")

                                </td>


                                <td>
                                    <input type="number" max="@Model.Item1.qualificationLevel" min="0" id="newReferee" value="1">
                                </td>
                                <td>
                                    <button type="button" id="update" class="btn bg-purple" disabled>Add new Referee</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                </div>
            </div>
            </div>
        </div>
<script>
    $("#referees").change(function () {
        if ($(this).val() != "") {
            $("#update").prop('disabled', false);

        } else {
            $("#update").prop('disabled', true);
        }

    })
    $("#update").click(function () {
        $.post("../addReferee", {
            'refereeID': $("#referees").val(),
            'qlevel': $("#newReferee").val(),
            'qualid': @Model.Item1.qualificationId,
        } ).done(function (data) {
            $("body").html(data);
        });
       
    });
    $(".delete").click(function (){
        var refid=$(this).attr('id');
        var rowid="row"+refid;
 
        $.post("../deleteUserqual",{
            'refereeID': refid,
            'qualid': @Model.Item1.qualificationId,
        },function(){
            $("#"+rowid).hide(1000).children('td, th')
     .animate({
         padding: 0
     })
     .wrapInner('<div />')
     .children()
     .slideUp(function () {
         $(this).closest('tr').remove();
     });
        });
    })


</script>