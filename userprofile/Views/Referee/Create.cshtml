@model userprofile.Models.REFEREEqualViewModel

@{
    
    ViewBag.Title = "Create";
}



<div class="row">
    <div class="col-xs-12">
        <div class="box" style="background-color:rgba(255, 255, 255,0.7)">

            <div class="box-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="fa fa-angle-left" >
                            @Html.ActionLink(" Back to List", "Index")
                        </div>
                        <hr />
                        @Html.ValidationSummary(true)
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.availability, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.re.availability)
                                @Html.ValidationMessageFor(model => model.re.availability)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.distTravel, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.re.distTravel)
                                @Html.ValidationMessageFor(model => model.re.distTravel)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.sport, "sport", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                @Html.DropDownList("sport", (SelectList)ViewBag.sport, new { @Name = "re.sport" })
                                @Html.ValidationMessageFor(model => model.re.sport)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.prefAge, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.re.prefAge)
                                @Html.ValidationMessageFor(model => model.re.prefAge)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.prefGrade, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.re.prefGrade)
                                @Html.ValidationMessageFor(model => model.re.prefGrade)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.re.ID, "ID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ID", (SelectList)ViewBag.ID, new { @Name = "re.ID" })
                                @Html.ValidationMessageFor(model => model.re.ID)
                            </div>
                        </div>
                        @*<div class="form-group">
                                    @Html.LabelFor(model => model.re.re.QUALIFICATIONS, "QUALIFICATIONS", new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.ListBox("name", (MultiSelectList)ViewBag.qualifaction)
                              @Html.DropDownList("qualifaction", String.Empty)
                                        @Html.DropDownList("QUALIFICATIONS", String.Empty)

                            @Html.DropDownList("name", (MultiSelectList)ViewBag.QUALIFICATIONS, new { multiple = "multiple"})
                            @Html.ValidationMessageFor(model => model.re.QUALIFICATIONS)
                                    </div>
                                </div>*@
                        <div class="form-group">
                            <div class="control-label col-md-2">
                                Select qual
                            </div>
                            
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.srqvm.quals)
                            </div>
                        </div>
                                    
                               
                            @*@foreach (var item in model.re.srqvm.quals)
                                {
                                @Html.EditorFor(m=>item)
                                }*@
                            


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }
                
</div>
</div>
</div>
</div>