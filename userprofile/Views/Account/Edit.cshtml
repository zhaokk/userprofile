@model userprofile.Models.EditUserViewModel

@{
    if (User.IsInRole("Referee"))
    {

        Layout = "~/Views/shared/_LayoutForRE.cshtml";

    }
    else { Layout = "~/Views/Shared/_AdminLteLayout.cshtml"; }
    ViewBag.Title = "Edit User Page";
}


<div class="row">
    <div class="col-sm-12">
        <div class="box">
            <div class="box-body">
                <div class="fa fa-angle-left">
                   
                    @if (User.IsInRole("Admin")) { 
                    @Html.ActionLink(" Back to List", "Index")}
                    else
                    {
                        @Html.ActionLink(" Back to List", "Index", "Home")
                    }
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true)
                       @if (User.IsInRole("Admin"))
                        {
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName)
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>
                        </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName)
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName)
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ffaNum, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ffaNum)
                                @Html.ValidationMessageFor(model => model.ffaNum)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email)
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.phoneNum,"Phone Number", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.phoneNum)
                                @Html.ValidationMessageFor(model => model.phoneNum)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.country,"Country", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.country)
                                @Html.ValidationMessageFor(model => model.country)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.street, "Street", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.street)
                                @Html.ValidationMessageFor(model => model.street)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.state, "State", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.state)
                                @Html.ValidationMessageFor(model => model.state)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.postcode, "Postcode",new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.postcode)
                                @Html.ValidationMessageFor(model => model.postcode)
                            </div>
                        </div>
                      
                        
                       
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        </div>
    </div>
                
                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
