@model userprofile.Models.matchViewModel

@{
    ViewBag.Title = "";
}
@*<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=false&libraries=places'></script>
    <script src="~/Scripts/AdminLTE/plugins/locationPicker/locationpicker.jquery.js"></script>*@

<div class="row">
    <div class="col-sm-12">
        <div class="box">
            <div class="box-body">
                <div class="fa fa-angle-left">
                    @Html.ActionLink(" Back to List", "Index")
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.matchDate, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.createdMatch.matchDate)
                                @Html.ValidationMessageFor(model => model.createdMatch.matchDate)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.locationId, "location", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("location", (SelectList)ViewBag.locationId, String.Empty, new { @Name = "createdMatch.locationId" })
                                @Html.ValidationMessageFor(model => model.createdMatch.locationId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.teamaId, "teamaID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                
                                @Html.DropDownList("teamaID", (SelectList)ViewBag.teamaID, String.Empty, new { @Name = "createdMatch.teamaID" })
                                @Html.ValidationMessageFor(model => model.createdMatch.teamaId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.teambId, "teambID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("teamaID", (SelectList)ViewBag.teamaID, String.Empty, new { @Name = "createdMatch.teambID" })
                                @Html.ValidationMessageFor(model => model.createdMatch.teambId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.winnerId, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.createdMatch.winnerId)
                                @Html.ValidationMessageFor(model => model.createdMatch.winnerId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.createdMatch.tournamentId, "tournament", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("tournament", (SelectList)ViewBag.tournamentId, String.Empty, new { @Name = "createdMatch.tournamentId" })
                                
                                @Html.ValidationMessageFor(model => model.createdMatch.tournamentId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.offernum, "number of offer", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="offernum" name="offernum">
                                    <option>        </option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group" id="q1" hidden>
                            @Html.LabelFor(model => model.q1, "offer one qualification", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("qualification", (SelectList)ViewBag.qualification, String.Empty, new { @Name = "q1" })
                                @Html.ValidationMessageFor(model => model.createdMatch.tournamentId)
                            </div>
                        </div>
                        <div class="form-group" id="q2" hidden>
                            @Html.LabelFor(model => model.q2, "offer two qualification", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                               @Html.DropDownList("qualification", (SelectList)ViewBag.qualification, String.Empty, new { @Name = "q2" })
                                @Html.ValidationMessageFor(model => model.createdMatch.tournamentId)
                            </div>
                        </div>
                        <div class="form-group" id="q3" hidden>
                            @Html.LabelFor(model => model.q3, "offer three qualification", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("qualification", (SelectList)ViewBag.qualification, String.Empty, new { @Name = "q3" })
                                @Html.ValidationMessageFor(model => model.createdMatch.tournamentId)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-1">
                                <input type="submit" value="Create" id="newoffers" class="btn btn-block btn-success" />
                            </div>
                        </div>
                        <div id="offers">
                        </div>
                    </div>
                 
                }

            </div>

        </div>
    </div>
</div>
@section scripts{

    <script>
        $(function () {
            $('input[name="createdMatch.matchDate"]').daterangepicker({
                singleDatePicker: true,
                timePicker: true,
                timePickerIncrement: 15,
                locale: {
                    format: 'MM/DD/YYYY h:mm A'
                }
            });
        });
        $("#offernum").change(function () {
            switch($(this).val()) {
                case "1":
                    $('#q1').show("slow", function () {

                    });
                    $('#q2').hide("slow", function () {

                    });
                    $('#q3').hide("slow", function () {

                    });
                    break;
                case "2":
                    $('#q2').show("slow", function () {

                    });
                    $('#q1').show("slow", function () {

                    });
                    $('#q3').hide("slow", function () {

                    });
                    break;
                case "3":
                    $('#q2').show("slow", function () {

                    });
                    $('#q1').show("slow", function () {

                    });
                    $('#q3').show("slow", function () {

                    });
                default:
                    break;
                   
            }
        });
      




                             </script>
}