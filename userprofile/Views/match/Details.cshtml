@using userprofile.Models;
@model Tuple<MATCH, List<OFFER>, bool>

@{

}

<script type="text/javascript">
    $(function () {
        $("#example1").DataTable();
        $('#example2').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false
        });
    });
</script>


<div class="row">
    <div class="col-xs-12" id="content">
        <div class="box">
            <div class="box-body">
                @if (User.IsInRole("Admin") || User.IsInRole("Organizer"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Item1.matchId }, new { @class = "btn btn-warning pull-right" })
                    @Html.ActionLink("Manage Offers", "manageOffer", new { id = Model.Item1.matchId }, new { @class = "btn bg-purple pull-right" })
                }




                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.matchDate)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.matchDate)
                    </dd>
                    @if (Model.Item1.status == 1 && Model.Item1.matchDate > DateTime.Now) { }
                    else
                    {

                        <dt>
                            @Html.DisplayNameFor(model => model.Item1.teamAScore)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Item1.teamAScore)
                        </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Item1.teamBScore)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Item1.teamBScore)
    </dd>
                    }








                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.status)
                    </dt>

                    <dd>
                        @switch (Model.Item1.status)
                        {
                            case 0:
                                @:Deleted
								break;
                            case 1:
                                if (Model.Item1.matchDate > DateTime.Now)
                                {
                                    @:Unplayed
								}
                                else
                                {
                                    if (Model.Item1.matchDate.AddMinutes(Model.Item1.matchLength + Model.Item1.halfTimeDuration) > DateTime.Now)
                                    {
                                        @:In Progress
									}
                                    else
                                    {
                                        @:Pending Results
									}
                                }
                                break;
                            case 3:
                            @Model.Item1.TEAM.name
                            @:Won!
								break;
                            case 4:
                            @:DRAW!
								break;
                            case 5:
                            @Model.Item1.TEAM1.name
                            @:Won!
								break;
                            case 6:
                            @:Delayed
								break;
                            case 7:
                            @:Canceled
								break;
                            default:
                            @:ERROR
								break;
                        }
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.matchLength)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.matchLength)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.halfTimeDuration)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Item1.halfTimeDuration)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.LOCATION.name)
                    </dt>

                    <dd>
                        <a href="@Url.Action( "Details","location", new { id = Model.Item1.locationId })">
                            @Html.DisplayFor(model => model.Item1.LOCATION.name)
                        </a>

                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.TEAM.name)
                    </dt>

                    <dd>
                        <a href="@Url.Action( "Details","team", new { id = Model.Item1.teamAId })">
                            @Html.DisplayFor(model => model.Item1.TEAM.name)
                        </a>

                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Item1.TEAM1.name)
                    </dt>

                    <dd>
                        <a href="@Url.Action( "Details","team", new { id = Model.Item1.teamBId })">
                            @Html.DisplayFor(model => model.Item1.TEAM1.name)
                        </a>

                    </dd>

                    <dt>
                        Tournament Name
                    </dt>

                    <dd>
                        <a href="@Url.Action( "Details","Tournament", new { id = Model.Item1.tournamentId })">
                            @Html.DisplayFor(model => model.Item1.TOURNAMENT.name)
                        </a>
                    </dd>
                </dl>
            </div>
        </div>


        @if (User.IsInRole("Admin") || User.IsInRole("Organizer") || User.IsInRole("Referee"))
        {

            <div class="box">
                <div class="box-body">
                    <div class="table-responsive">
                        <table id="example2" class="table table-bordered table-hover">
                            <thead>
                                <tr>

                                    <th>Referee Name</th>

                                    <th>

                                        Type

                                    </th>

                                    <th>
                                        Status
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Item2)
                                {
                                    if (User.IsInRole("Admin") || User.IsInRole("Organizer") || User.IsInRole("Referee"))
                                    {
                                        if (Model.Item3 || User.Identity.Name == item.REFEREE.AspNetUser.UserName)
                                        {

                                            if (item.status == 0)
                                            {

                                            }
                                            else
                                            {
                                                if (item.status == 4 || item.status == 5)
                                                {
                                                    <tr>
                                                        <td>
                                                            Unassigned
                                                        </td>
                                                        <td>
                                                            @item.typeOfOffer
                                                            @if (item.OFFERQUALs.Count() != 0)
                                                            {
                                                                @:Required Quals:
												foreach (var i in item.OFFERQUALs)
                                                {
                                                    @i.QUALIFICATION.name
                                                                @i.qualLevel
                                                }
                                                            }
                                                        </td>
                                                        <td>
                                                            @switch (item.status)
                                                            {
                                                                case 1:
                                                                    @:Accepted
													break;
                                                                case 2:
                                                                @:Declined
													break;
                                                                case 3:
                                                                @:Pending
													break;
                                                                case 4:
                                                                @:Unassigned
													break;
                                                                case 5:
                                                                @:Smart Assign
													break;
                                                                default:
                                                                @:ERROR!
													break;
                                                            }
                                                        </td>

                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td>
                                                            <a href="@Url.Action( "Details","REFEREE", new { id = item.refId })">
                                                                @item.REFEREE.AspNetUser.firstName
                                                                @item.REFEREE.AspNetUser.lastName
                                                                (@item.REFEREE.AspNetUser.UserName)
                                                            </a>
                                                        </td>

                                                        <td>
                                                            <a href="@Url.Action( "Details","Types", new { id = item.typeOfOffer })">
                                                                @item.typeOfOffer
                                                            </a>
                                                        </td>
                                                        <td>
                                                            @switch (item.status)
                                                            {
                                                                case 1:
                                                                    @:Accepted
													break;
                                                                case 2:
                                                                @:Declined
													break;
                                                                case 3:
                                                                @:Pending
													break;
                                                                case 4:
                                                                @:Unassigned
													break;
                                                                case 5:
                                                                @:Smart Assign
													break;
                                                                default:
                                                                @:ERROR!
													break;
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }

                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
            </div>

        }




        @if (Model.Item1.matchDate > DateTime.Now)
        {

        }
        else
        {
            if (Model.Item1.matchDate.AddMinutes(Model.Item1.matchLength + Model.Item1.halfTimeDuration) > DateTime.Now)
            {

            }
            else
            {


                if (ViewBag.upload)
                {
                  
                    <div class="col-md-6 teamscore" hidden>
                        <div class="box box-success">
                            <div class="box-body">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Item1.teamAScore, "Team A score", new { @class = "control-label col-md-4" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Item1.teamAScore, new { min = "0", max = "200", type = "number", @class = "col-md-4" })
                                        @Html.ValidationMessageFor(model => model.Item1.teamAScore)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Item1.teamBScore, "Team B score", new { @class = "control-label col-md-4" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Item1.teamBScore, new { min = "0", max = "200", type = "number", @class="col-md-4"})
                                        @Html.ValidationMessageFor(model => model.Item1.teamBScore)
                                    </div>
                                </div>

                            </div>
                        </div>
                        </div>
                        <div class="pull-right" style="padding-right:15px;">
                            <div class="btn-group">
                                <button type="button" id="update" class="btn btn-success btn-lg  pull-right">Update Match Result</button>
                               

                            </div>
                        </div>
    <div class="pull-right" id="submit" style="padding-right:15px;" hidden>
        <div class="btn-group">
            <button type="button" id="submit" class="btn btn-warning btn-lg  pull-right">Submit result</button>
           

        </div>
    </div>
    
                }

                        <script>
                            $("#update").click(function () {
                                var form = "<form action='../index'> <input type='submit' value='Submit'> </form>";
                                $(".teamscore").show("slow", function () {
                                    $("#update").hide();
                                    if ($("#Item1_teamAScore").val() == "") {
                                        $("#Item1_teamAScore").val(0);
                                        $("#Item1_teamBScore").val(0);
                                    }
                                    $("#submit").show();

                                });


                            });
                         
                            var matchID=@Model.Item1.matchId;
                            $("#submit").click(function () {
                                var A=$("#Item1_teamAScore").val();
                                var B=$("#Item1_teamBScore").val();
                                $.post("../uploadResult", {
                                    'Ascore': A,
                                    'Bscore': B,
                                    'matchID':matchID,

                                }).done(function (data) {
                                    $("body").html(data);
                                });
                            }
                                );

                        </script>
                        }
                        }
                    </div>
</div>